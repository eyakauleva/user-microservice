scalar LocalDateTime

directive @NotBlank(message : String = "graphql.validation.NotBlank.message")
                    on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @Min(value : Int = 0, message : String = "graphql.validation.Min.message")
                    on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

type Query {
 getAllUsers: [User]
 findUserById(userId: ID!): User
 findByCriteria(criteria: CriteriaInput!, size: Int! @Min(value: 1), page: Int! @Min): [User]
}

type Mutation {
 createUser(user: UserInput!, commandBy: String!): Es
 deleteUser(id: ID!, commandBy: String!): Es
}

type User {
 id: ID
 firstName: String!
 lastName: String!
 email: String!
 phone: String!
 age: Int
 gender: Gender
 height: Float
 weight: Float
 eyesColor: EyesColor
 startStudyYear: Int
 endStudyYear: Int
}

enum Gender {
 MALE
 FEMALE
 UNSET
}

enum EyesColor {
 BLUE
 GREEN
 BROWN
 GREY
 UNSET
}

input UserInput {
 firstName: String @NotBlank
 lastName: String @NotBlank
 email: String @NotBlank
 phone: String @NotBlank
 age: Int
 gender: Gender
 height: Float
 weight: Float
 eyesColor: EyesColor
 startStudyYear: Int
 endStudyYear: Int
}

input CriteriaInput {
 name: String
 phone: String
 age: Int
 heightFrom: Float
 heightTo: Float
 weightFrom: Float
 weightTo: Float
 genders: [Gender]
 eyesColors: [EyesColor]
 studyYear: Int
}

type Es {
 id: ID
 type: String
 time: LocalDateTime
 createdBy: String
 entityId: String
 payload: String
 status: String
}